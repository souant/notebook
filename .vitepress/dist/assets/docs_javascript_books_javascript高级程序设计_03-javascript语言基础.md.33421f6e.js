import{_ as s,o as l,c as n,d as a}from"./app.19dd14ad.js";const F=JSON.parse('{"title":"03-javascript语言基础","description":"03-javascript语言基础","frontmatter":{"lang":"zh-CN","title":"03-javascript语言基础","description":"03-javascript语言基础"},"headers":[{"level":2,"title":"js 7种原始数据类型","slug":"js-7种原始数据类型","link":"#js-7种原始数据类型","children":[]},{"level":2,"title":"typeof 操作符","slug":"typeof-操作符","link":"#typeof-操作符","children":[]},{"level":2,"title":"Undefined类型","slug":"undefined类型","link":"#undefined类型","children":[]},{"level":2,"title":"Null类型","slug":"null类型","link":"#null类型","children":[]},{"level":2,"title":"Boolean类型（布尔值，两个值true | false）","slug":"boolean类型-布尔值-两个值true-false","link":"#boolean类型-布尔值-两个值true-false","children":[]},{"level":2,"title":"Number类型（数字类型）","slug":"number类型-数字类型","link":"#number类型-数字类型","children":[]},{"level":2,"title":"String类型（字符串）","slug":"string类型-字符串","link":"#string类型-字符串","children":[]},{"level":2,"title":"Symbol类型（符号）","slug":"symbol类型-符号","link":"#symbol类型-符号","children":[]},{"level":2,"title":"Object类型（对象）","slug":"object类型-对象","link":"#object类型-对象","children":[{"level":3,"title":"每个Object对象都有的属性和方法","slug":"每个object对象都有的属性和方法","link":"#每个object对象都有的属性和方法","children":[]}]},{"level":2,"title":"Function类型（函数）","slug":"function类型-函数","link":"#function类型-函数","children":[]}],"relativePath":"docs/javascript/books/javascript高级程序设计/03-javascript语言基础.md"}'),o={name:"docs/javascript/books/javascript高级程序设计/03-javascript语言基础.md"},e=a(`<h1 id="语言基础" tabindex="-1">语言基础 <a class="header-anchor" href="#语言基础" aria-hidden="true">#</a></h1><h2 id="js-7种原始数据类型" tabindex="-1">js 7种原始数据类型 <a class="header-anchor" href="#js-7种原始数据类型" aria-hidden="true">#</a></h2><ol><li>Undefined</li><li>Null</li><li>Boolean</li><li>Number</li><li>String</li><li>Symbol</li><li>BigInt</li></ol><h2 id="typeof-操作符" tabindex="-1">typeof 操作符 <a class="header-anchor" href="#typeof-操作符" aria-hidden="true">#</a></h2><blockquote><p>typeof对值类型的判断返回值，7种</p></blockquote><ol><li>undefined 未定义</li><li>boolean 布尔值</li><li>string 字符串</li><li>number 数字</li><li>function 函数</li><li>symbol 符号</li><li>object 对象（null值返回也是这个）</li></ol><blockquote><p>typeof 一个未声明的变量 返回: undefined</p></blockquote><h2 id="undefined类型" tabindex="-1">Undefined类型 <a class="header-anchor" href="#undefined类型" aria-hidden="true">#</a></h2><blockquote><p>值未初始化，默认值为undefined</p></blockquote><h2 id="null类型" tabindex="-1">Null类型 <a class="header-anchor" href="#null类型" aria-hidden="true">#</a></h2><blockquote><p>null表示空对象指针，所以typeof null。返回object<br> null是一个假值，<code>Boolean(null); // false</code><br> undefined值由null值派生而来，所以</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div><h2 id="boolean类型-布尔值-两个值true-false" tabindex="-1">Boolean类型（布尔值，两个值true | false） <a class="header-anchor" href="#boolean类型-布尔值-两个值true-false" aria-hidden="true">#</a></h2><blockquote><p>true 不等于 1 ; false 不等于 0</p></blockquote><h2 id="number类型-数字类型" tabindex="-1">Number类型（数字类型） <a class="header-anchor" href="#number类型-数字类型" aria-hidden="true">#</a></h2><blockquote><p>整数的表示，使用没有小数点的数字声明<br> 小数为双精度数字，浮点精度最高小数点后17位<br> 特殊的数值 NaN (not a number), 表示不是数字，NaN 不等于 NaN</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0000112</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 112</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// NaN</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">isNaN</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div><blockquote><p>isNaN方法判断时，会做隐式的类型转换</p></blockquote><h2 id="string类型-字符串" tabindex="-1">String类型（字符串） <a class="header-anchor" href="#string类型-字符串" aria-hidden="true">#</a></h2><p>表示零或多个 16 位 Unicode 字符序列</p><p>字符串可以使用双引号（&quot;）、单引号（&#39;）或反引号（\`）标示</p><blockquote><p>toString()方法可用于将数字转换进制</p></blockquote><h2 id="symbol类型-符号" tabindex="-1">Symbol类型（符号） <a class="header-anchor" href="#symbol类型-符号" aria-hidden="true">#</a></h2><blockquote><p>初始化需要用Symbol()函数初始化<br> 对象object可用Symbol类型的值作为键值</p></blockquote><h2 id="object类型-对象" tabindex="-1">Object类型（对象） <a class="header-anchor" href="#object类型-对象" aria-hidden="true">#</a></h2><blockquote><p>一组数据和功能的集合<br> 使用 new 关键词创建</p></blockquote><h3 id="每个object对象都有的属性和方法" tabindex="-1">每个Object对象都有的属性和方法 <a class="header-anchor" href="#每个object对象都有的属性和方法" aria-hidden="true">#</a></h3><ol><li>constructor: （属性） 当前对象的创建函数</li><li>hasOwnProperty(propertyName): (方法) 判断参数propertyName是否为该对象的属性</li><li>isPrototypeof(object): (方法) 判断当前对象是否为传入的参数对象的原型</li><li>propertyIsEnumerable(propertyName): (方法) 判断传入的属性在该对象中是否可用</li><li>toLocaleString(): (方法) 返回对象的字符串表示，类似于object.toString()</li><li>toString(): (方法) 返回对象的字符串表示</li><li>valueOf(): (方法) 返回对象对应的字符串、数字或布尔值表示，通常与toString()一致</li></ol><h2 id="function类型-函数" tabindex="-1">Function类型（函数） <a class="header-anchor" href="#function类型-函数" aria-hidden="true">#</a></h2><blockquote><p>默认返回值undefined</p></blockquote>`,30),p=[e];function t(c,r,i,A,y,D){return l(),n("div",null,p)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
