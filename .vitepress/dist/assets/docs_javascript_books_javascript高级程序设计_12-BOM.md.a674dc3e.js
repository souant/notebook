import{_ as t,o as e,c as l,d as s}from"./app.dd7e0640.js";const g=JSON.parse('{"title":"BOM","description":"","frontmatter":{},"headers":[{"level":2,"title":"window 对象","slug":"window-对象","link":"#window-对象","children":[{"level":3,"title":"常用方法","slug":"常用方法","link":"#常用方法","children":[]},{"level":3,"title":"定时器","slug":"定时器","link":"#定时器","children":[]},{"level":3,"title":"系统对话框","slug":"系统对话框","link":"#系统对话框","children":[]}]},{"level":2,"title":"location 对象","slug":"location-对象","link":"#location-对象","children":[{"level":3,"title":"实例方法","slug":"实例方法","link":"#实例方法","children":[]}]},{"level":2,"title":"navigator 对象","slug":"navigator-对象","link":"#navigator-对象","children":[]},{"level":2,"title":"screen 对象","slug":"screen-对象","link":"#screen-对象","children":[]},{"level":2,"title":"history 对象","slug":"history-对象","link":"#history-对象","children":[{"level":3,"title":"常用方法","slug":"常用方法-1","link":"#常用方法-1","children":[]}]}],"relativePath":"docs/javascript/books/javascript高级程序设计/12-BOM.md"}'),a={name:"docs/javascript/books/javascript高级程序设计/12-BOM.md"},n=s(`<h1 id="bom" tabindex="-1">BOM <a class="header-anchor" href="#bom" aria-hidden="true">#</a></h1><p>浏览器对象模型</p><h2 id="window-对象" tabindex="-1">window 对象 <a class="header-anchor" href="#window-对象" aria-hidden="true">#</a></h2><p><code>BOM</code> 的核心是 <code>window</code> 对象，表示浏览器的实例</p><ul><li>可以作为 JS 全局对象</li><li>可以通过 window 调用浏览器 API</li></ul><div class="tip custom-block"><p class="custom-block-title">注意</p><p>使用<code>var</code>关键字创建的变量，会成为<code>window</code>的属性和方法</p></div><h3 id="常用方法" tabindex="-1">常用方法 <a class="header-anchor" href="#常用方法" aria-hidden="true">#</a></h3><ol><li><code>window.top</code> 获取窗口最上层 window 对象，例如 iframe 中访问</li><li><code>window.parent</code> 获取上一层窗口 window 对象</li><li><code>window.screenTop</code> 获取窗口距离屏幕上方的像素值</li><li><code>window.screenLeft</code> 获取窗口距离屏幕左侧的像素值</li><li><code>window.moveTo(left, top)</code> 移动窗口到</li><li><code>window.moveBy()</code> 同上</li><li><code>window.innerWidth</code> 获取窗口宽度，页面可视区域</li><li><code>window.innerHeight</code> 获取窗口高度，页面可视区域</li><li><code>window.outerWidth</code> 获取窗口本身宽度</li><li><code>window,outerHeight</code> 获取窗口本身高度</li><li><code>window.resizeTo(width, height)</code> 缩放窗口</li><li><code>window.open(url)</code> 打开窗口， 可以设置打开方式</li><li><code>window.opener</code> 获取打开当前窗口的 window 实例</li></ol><h3 id="定时器" tabindex="-1">定时器 <a class="header-anchor" href="#定时器" aria-hidden="true">#</a></h3><ol><li><code>setTimeout(() =&gt; {}, delay)</code> 指定在一定时间后执行某些代码，返回一个定时器 ID，可用<code>clearTimeout()</code>结束</li><li><code>setInterval(() =&gt; {}, delay)</code> 指定每隔一段时间执行某些代码，返回一个定时器 ID，可用<code>clearInterval()</code>结束</li></ol><h3 id="系统对话框" tabindex="-1">系统对话框 <a class="header-anchor" href="#系统对话框" aria-hidden="true">#</a></h3><ol><li><code>alert()</code> 参数传字符串，点击确定关闭</li><li><code>confirm()</code> 参数传字符串, 点击 OK 返回 true 点击 cancel 返回 false</li><li><code>prompt()</code> 提示用户输入消息, 点击 OK 返回输入文本 点击 cancel 返回 null</li><li><code>print()</code> 打开打印对话框</li><li><code>find()</code> 打开查找对话框</li></ol><h2 id="location-对象" tabindex="-1">location 对象 <a class="header-anchor" href="#location-对象" aria-hidden="true">#</a></h2><p>location 对象提供当前网页的信息，主要为导航相关</p><h3 id="实例方法" tabindex="-1">实例方法 <a class="header-anchor" href="#实例方法" aria-hidden="true">#</a></h3><ol><li>获取导航 URL 地址相关 页面 url: <a href="http://www.wrox.com:80/WileyCDA/?q=javascript#contents" target="_blank" rel="noreferrer">http://www.wrox.com:80/WileyCDA/?q=javascript#contents</a></li></ol><table><thead><tr><th>属性</th><th style="text-align:left;">值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>location.hash</td><td style="text-align:left;">&quot;#contents&quot; URL</td><td style="text-align:left;">散列值（井号后跟零或多个字符），如果没有则为空字符串</td></tr><tr><td>location.host</td><td style="text-align:left;">&quot;<a href="http://www.wrox.com:80" target="_blank" rel="noreferrer">www.wrox.com:80</a>&quot;</td><td style="text-align:left;">服务器名及端口号</td></tr><tr><td>location.hostname</td><td style="text-align:left;">&quot;<a href="http://www.wrox.com" target="_blank" rel="noreferrer">www.wrox.com</a>&quot; 服务器名</td><td style="text-align:left;"></td></tr><tr><td>location.href</td><td style="text-align:left;">&quot;url&quot; 页面 url</td><td style="text-align:left;">当前加载页面的完整 URL。location 的 toString()方法返回这个值</td></tr><tr><td>location.pathname</td><td style="text-align:left;">&quot;/WileyCDA/&quot;</td><td style="text-align:left;">URL 中的路径和（或）文件名</td></tr><tr><td>location.port</td><td style="text-align:left;">&quot;80&quot;</td><td style="text-align:left;">请求的端口。如果 URL 中没有端口，则返回空字符串</td></tr><tr><td>location.protocol</td><td style="text-align:left;">&quot;http:&quot;</td><td style="text-align:left;">页面使用的协议。通常是&quot;http:&quot;或&quot;https:&quot;</td></tr><tr><td>location.search</td><td style="text-align:left;">&quot;?q=javascript&quot;</td><td style="text-align:left;">URL 的查询字符串。这个字符串以问号开头</td></tr><tr><td>location.username</td><td style="text-align:left;">&quot;foouser&quot;</td><td style="text-align:left;">域名前指定的用户名</td></tr><tr><td>location.password</td><td style="text-align:left;">&quot;barpassword&quot;</td><td style="text-align:left;">域名前指定的密码</td></tr><tr><td>location.origin</td><td style="text-align:left;">&quot;<a href="http://www.wrox.com" target="_blank" rel="noreferrer">http://www.wrox.com</a>&quot;</td><td style="text-align:left;">URL 的源地址。只读</td></tr></tbody></table><ol start="2"><li>重新加载页面 location.reload();</li></ol><h2 id="navigator-对象" tabindex="-1">navigator 对象 <a class="header-anchor" href="#navigator-对象" aria-hidden="true">#</a></h2><p>navigator 对象是标识浏览器的标准，支持浏览器自己的属性</p><table><thead><tr><th>属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>activeVrDisplays</td><td style="text-align:left;">返回数组，包含 ispresenting 属性为 true 的 VRDisplay 实例</td></tr><tr><td>appCodeName</td><td style="text-align:left;">即使在非 Mozilla 浏览器中也会返回&quot;Mozilla&quot;</td></tr><tr><td>appName</td><td style="text-align:left;">浏览器全名</td></tr><tr><td>appVersion</td><td style="text-align:left;">浏览器版本。通常与实际的浏览器版本不一致</td></tr><tr><td>battery</td><td style="text-align:left;">返回暴露 Battery Status API 的 BatteryManager 对象</td></tr><tr><td>buildId</td><td style="text-align:left;">浏览器的构建编号</td></tr><tr><td>connection</td><td style="text-align:left;">返回暴露 Network Information API 的 NetworkInformation 对象</td></tr><tr><td>cookieEnabled</td><td style="text-align:left;">返回布尔值，表示是否启用了 cookie</td></tr><tr><td>credentials</td><td style="text-align:left;">返回暴露 Credentials Management API 的 CredentialsContainer 对象</td></tr><tr><td>deviceMemory</td><td style="text-align:left;">返回单位为 GB 的设备内存容量</td></tr><tr><td>doNotTrack</td><td style="text-align:left;">返回用户的“不跟踪”（do-not-track）设置</td></tr><tr><td>geolocation</td><td style="text-align:left;">返回暴露 Geolocation API 的 Geolocation 对象</td></tr><tr><td>getVRDisplays</td><td style="text-align:left;">() 返回数组，包含可用的每个 VRDisplay 实例</td></tr><tr><td>getUserMedia</td><td style="text-align:left;">() 返回与可用媒体设备硬件关联的流</td></tr><tr><td>hardwareConcurrency</td><td style="text-align:left;">返回设备的处理器核心数量</td></tr><tr><td>javaEnabled</td><td style="text-align:left;">返回布尔值，表示浏览器是否启用了 Java</td></tr><tr><td>language</td><td style="text-align:left;">返回浏览器的主语言</td></tr><tr><td>languages</td><td style="text-align:left;">返回浏览器偏好的语言数组</td></tr><tr><td>locks</td><td style="text-align:left;">返回暴露 Web Locks API 的 LockManager 对象</td></tr><tr><td>mediaCapabilities</td><td style="text-align:left;">返回暴露 Media Capabilities API 的 MediaCapabilities 对象</td></tr><tr><td>mediaDevices</td><td style="text-align:left;">返回可用的媒体设备</td></tr><tr><td>maxTouchPoints</td><td style="text-align:left;">返回设备触摸屏支持的最大触点数</td></tr><tr><td>mimeTypes</td><td style="text-align:left;">返回浏览器中注册的 MIME 类型数组</td></tr><tr><td>onLine</td><td style="text-align:left;">返回布尔值，表示浏览器是否联网</td></tr><tr><td>oscpu</td><td style="text-align:left;">返回浏览器运行设备的操作系统和（或）CPU</td></tr><tr><td>permissions</td><td style="text-align:left;">返回暴露 Permissions API 的 Permissions 对象</td></tr><tr><td>platform</td><td style="text-align:left;">返回浏览器运行的系统平台</td></tr><tr><td>plugins</td><td style="text-align:left;">返回浏览器安装的插件数组。在 IE 中，这个数组包含页面中所有<embed>元素</td></tr><tr><td>product</td><td style="text-align:left;">返回产品名称（通常是&quot;Gecko&quot;）</td></tr><tr><td>productSub</td><td style="text-align:left;">返回产品的额外信息（通常是 Gecko 的版本）</td></tr><tr><td>registerProtocolHandler</td><td style="text-align:left;">() 将一个网站注册为特定协议的处理程序</td></tr><tr><td>requestMediaKeySystemAccess</td><td style="text-align:left;">() 返回一个期约，解决为 MediaKeySystemAccess 对象</td></tr><tr><td>sendBeacon</td><td style="text-align:left;">() 异步传输一些小数据</td></tr><tr><td>serviceWorker</td><td style="text-align:left;">返回用来与 ServiceWorker 实例交互的 ServiceWorkerContainer</td></tr><tr><td>share</td><td style="text-align:left;">() 返回当前平台的原生共享机制</td></tr><tr><td>storage</td><td style="text-align:left;">返回暴露 Storage API 的 StorageManager 对象</td></tr><tr><td>userAgent</td><td style="text-align:left;">返回浏览器的用户代理字符串</td></tr><tr><td>vendor</td><td style="text-align:left;">返回浏览器的厂商名称</td></tr><tr><td>vendorSub</td><td style="text-align:left;">返回浏览器厂商的更多信息</td></tr><tr><td>vibrate</td><td style="text-align:left;">() 触发设备振动</td></tr><tr><td>webdriver</td><td style="text-align:left;">返回浏览器当前是否被自动化程序控制</td></tr></tbody></table><h2 id="screen-对象" tabindex="-1">screen 对象 <a class="header-anchor" href="#screen-对象" aria-hidden="true">#</a></h2><p>screen 对象 保存浏览器客户端能力信息</p><table><thead><tr><th>属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>availHeight</td><td style="text-align:left;">屏幕像素高度减去系统组件高度（只读）</td></tr><tr><td>availLeft</td><td style="text-align:left;">没有被系统组件占用的屏幕的最左侧像素（只读）</td></tr><tr><td>availTop</td><td style="text-align:left;">没有被系统组件占用的屏幕的最顶端像素（只读）</td></tr><tr><td>availWidth</td><td style="text-align:left;">屏幕像素宽度减去系统组件宽度（只读）</td></tr><tr><td>colorDepth</td><td style="text-align:left;">表示屏幕颜色的位数；多数系统是 32（只读）</td></tr><tr><td>height</td><td style="text-align:left;">屏幕像素高度</td></tr><tr><td>left</td><td style="text-align:left;">当前屏幕左边的像素距离</td></tr><tr><td>pixelDepth</td><td style="text-align:left;">屏幕的位深（只读）</td></tr><tr><td>top</td><td style="text-align:left;">当前屏幕顶端的像素距离</td></tr><tr><td>width</td><td style="text-align:left;">屏幕像素宽度</td></tr><tr><td>orientation</td><td style="text-align:left;">返回 Screen Orientation API 中屏幕的朝向</td></tr></tbody></table><h2 id="history-对象" tabindex="-1">history 对象 <a class="header-anchor" href="#history-对象" aria-hidden="true">#</a></h2><p>history 对象表示当前窗口首次使用以来用户的导航历史记录。</p><h3 id="常用方法-1" tabindex="-1">常用方法 <a class="header-anchor" href="#常用方法-1" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 后退一页</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">go</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 前进一页</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">go</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 前进两页</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">go</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 导航到最近的 wrox.com 页面</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">go</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrox.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 导航到最近的 nczonline.net 页面</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">go</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nczonline.net</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 后退一页</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">back</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 前进一页</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forward</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (history</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 这是用户窗口中的第一个页面</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建新的历史记录</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> stateObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pushState</span><span style="color:#A6ACCD;">(stateObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">baz.html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 替换当前历史记录</span></span>
<span class="line"><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replaceState</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">newFoo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">newBar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">New title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,28),o=[n];function r(d,i,p,c,y,h){return e(),l("div",null,o)}const f=t(a,[["render",r]]);export{g as __pageData,f as default};
